[tool.poetry]
name = "postthis"
version = "0.1.0"
description = ""
authors = ["Hendrik <andurin@process-zero.de>"]
readme = "README.md"
license = "GPL-3.0-only"
repository = "https://github.com/spousesupportgroup/postthis/"

[tool.poetry.dependencies]
python = "^3.9"
python-slugify = "^8.0.1"
Pillow= "^10.0.1"
argon2-cffi= "^23.1.0"
whitenoise="^6.6.0"
redis="^5.0.1"
hiredis="^2.2.3"
celery="^5.3.4"
django-celery-beat="^2.5.0"
flower="^2.0.1"
django="^4.2.6"
django-environ="^0.11.1"
django-model-utils="^4.3.1"
django-allauth="^0.57.0"
django-crispy-forms="^2.0"
crispy-bootstrap5="^0.7"
django-redis="^5.4.0"
sphinx = { version = "^7.2.6", optional = true }
sphinx-autobuild = { version = "^2021.3.14", optional = true }
sphinx_rtd_theme = { version = "^1.3.0", optional = true  }
django-debug-toolbar = { version = "^4.2.0", optional = true  }
django-extensions = { version = "^3.2.3", optional = true  }

[tool.poetry.extras]
docs = ["sphinx","sphinx-autobuild","sphinx_rtd_theme", "django-debug-toolbar", "django-extensions"]

[tool.poetry.group.local]
optional = true

[tool.poetry.group.local.dependencies]
werkzeug = {version = "3.0.0", extras = ["watchdog"]}
ipdb = "^0.13.13"
psycopg = {version = "3.1.12", extras = ["c"]}
watchfiles = "^0.21.0"
mypy = "^1.5.1"
django-stubs = {version = "4.2.4", extras = ["compatible-mypy"]}
pytest = "^7.4.2"
pytest-sugar = "^0.9.7"
sphinx = "^7.2.6"
sphinx-autobuild = "^2021.3.14"
sphinx_rtd_theme = "^1.3.0"
flake8="^6.1.0"
flake8-isort="^6.1.0"
coverage="^7.3.2"
black="^23.9.1"
djlint="^1.34.0"
pylint = "^2.17.7"
pylint-django="^2.5.3"
pylint-celery="^0.3"
pre-commit="^3.5.0"
factory-boy = "^3.3.0"
django-debug-toolbar = "^4.2.0"
django-extensions = "^3.2.3"
django-coverage-plugin = "^3.1.0"
pytest-django = "^4.5.2"
pytest-cov = "^4.0.0"

[tool.poetry.group.production]
optional = true

[tool.poetry.group.production.dependencies]
gunicorn = "^21.2.0"
psycopg = {version = "3.1.12", extras = ["c"]}
django-anymail = "10.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==== pytest ====
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "postthis.settings"
#DATABASE_URL=postgres://debug:debug@127.0.0.1:5432/postthis
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db -vv --cov --cov-report term --cov-report term-missing --cov-report xml:coverage.xml"
python_files = [
    "tests.py",
    "test_*.py",
    "*_tests.py"
]

# ==== Coverage ====
[tool.coverage.run]
include = ["postthis/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py311']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = [
    "postthis",
    "config",
]
skip = ["venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== mypy ====
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = [
    "pylint_django",
    "pylint_celery",
]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]


# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2
